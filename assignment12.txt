Q1.Create a program to input a Date from the user in dd/mm/yyyy format and print it in English. 
program:-
package month;

import java.util.*;

public class Month {

	public static HashMap<String, String> date = new HashMap<String, String>();
	public static HashMap<String, String> month = new HashMap<String, String>();
	public static HashMap<String, String> yearLeft = new HashMap<String, String>();
	public static HashMap<String, String> yearRight = new HashMap<String, String>();

	public static void genData() {
		date.put("01", "First");
		date.put("02", "Second");
		date.put("03", "Third");
		date.put("04", "Fourth");
		date.put("05", "Fifth");
		date.put("06", "Sixth");
		date.put("07", "Seventh");
		date.put("08", "Eighth");
		date.put("09", "Nineth");
		date.put("10", "Tenth");
		date.put("11", "Eleventh");
		date.put("12", "Tweleveth");
		date.put("13", "Thirteenth");
		date.put("14", "Fourteenth");
		date.put("15", "Fifteenth");
		date.put("16", "Sixteenth");
		date.put("17", "Seventeenth");
		date.put("18", "Eighteenth");
		date.put("19", "Nineteenth");
		date.put("20", "Twenty");
		date.put("21", "Twenty First");
		date.put("22", "Twenty Second");
		date.put("23", "Twenty Third");
		date.put("24", "Twenty Fourth");
		date.put("25", "Twent Fifth");
		date.put("26", "Twenty Sixth");
		date.put("27", "Twenty Seventh");
		date.put("28", "Twenty Eighth");
		date.put("29", "Twenty Nineth");
		date.put("30", "Thirty");
		date.put("31", "Thirty First");

		month.put("01", "January");
		month.put("02", "February");
		month.put("03", "March");
		month.put("04", "April");
		month.put("05", "May");
		month.put("06", "June");
		month.put("07", "July");
		month.put("08", "August");
		month.put("09", "September");
		month.put("10", "October");
		month.put("11", "November");
		month.put("12", "December");

		yearLeft.put("07", "Seven");
		yearLeft.put("08", "Eight");
		yearLeft.put("09", "Nine");
		yearLeft.put("10", "Ten");
		yearLeft.put("11", "Eleven");
		yearLeft.put("12", "Tweleve");
		yearLeft.put("13", "Thirteen");
		yearLeft.put("14", "Fourteen");
		yearLeft.put("15", "Fifteen");
		yearLeft.put("16", "Sixteen");
		yearLeft.put("17", "Seventeen");
		yearLeft.put("18", "Eighteen");
		yearLeft.put("19", "Nineteen");
		yearLeft.put("20", "Twenty");
		yearLeft.put("21", "Twenty One");
		yearLeft.put("22", "Twenty Two");

		yearRight.put("00", "Hundred");
		yearRight.put("10", "Ten");
		yearRight.put("20", "Twenty");
		yearRight.put("30", "Thirty");
		yearRight.put("40", "Forty");
		yearRight.put("50", "Fifty");
		yearRight.put("60", "Sixty");
		yearRight.put("70", "Seventy");
		yearRight.put("80", "Eighty");
		yearRight.put("90", "Ninety");
	}

	public static String convert(String dateInput) {
		String d = dateInput.substring(0, 2);
		String m = dateInput.substring(3, 5);
		String yL = dateInput.substring(6, 8);
		String yR = dateInput.substring(8, 10);
		return date.get(d) + " " + month.get(m) + " " + yearLeft.get(yL) + " " + yearRight.get(yR);
	}

	public static void main(String args[]) {

		genData();

		System.out.println("22-02-1930");
		System.out.println(convert("22-02-1930"));

		System.out.println("\n21-11-1990");
		System.out.println(convert("21-11-1990"));


	}
}


Q2. Create a generic Sorting function that can sort any type of array (primitive types).
Program:-
package genericsort;
import java.util.ArrayList;
import java.util.*;
import static java.util.Arrays.sort;

public class Genericsort {
    static<T>void print(T array[]){
        for(T var : array){
            System.out.print(" "+var);
            }
    }

    
    public static void main(String[] args) {
        Integer[] array={13,6,7,21,45,2,21,50};
          Character array2[]={'S','O','N','U'};
        print(array);
        System.out.println();
        sort(array);
        print(array);
        System.out.println();
        print(array2);
        System.out.println();
        sort(array2);
        print(array2);
        System.out.println();
        
    }
    
}
 
Q3.Create a generic print function that can print all types of arrays (primitive types).
Program:-
package generics;


public class GenericsArray {
    static<T>void print(T array[]){
        for(T var : array){
            System.out.print(" "+var);
            }
    }
    public static void main(String args[]){
        Character array[]={'G','U','P','T','A'};
        Integer array2[]={2,4,6,8,7};
        print(array);
        System.out.println();
        print(array2);
       
        
        
 
       
    }
    
}

Q4. Write a java program that sorts the list on the basis of age and name.
Program:-
package personal;
import java.util.ArrayList;
import java.util.Collections;
public class Personal  implements Comparable<Personal> {
    int age;
    
    String name;
public Personal(int age, String name)
    {
        this.age=age;
        
        this.name=name;
    }

    public int getAge() {
        return age;
    }

    public String getName() {
        return name;
    }
    public static void main(String[] args) {
      Personal obj1=new Personal(10,"sonu");
      Personal obj2=new Personal(24,"monu");
      Personal obj3=new Personal(34,"chotu");
     Personal obj4=new Personal(24,"shyam");
      Personal obj5=new Personal(17,"peter");
      Personal obj6=new Personal(18,"umar");
      ArrayList<Personal> ar=new ArrayList<Personal>();
      ar.add(obj1);
      ar.add(obj2);
      ar.add(obj3);
       ar.add(obj4);
        ar.add(obj5);
         ar.add(obj6);
         for(Personal man : ar)
             System.out.println(man.getAge()+""+man.getName()+"");
         personalcompare percompare = new personalcompare();
             Collections.sort(ar,percompare);   
             for(Personal man : ar)
             {
             System.out.println(man.getAge()+""+man.getName()+"");
      
             }
             Collections.sort(ar);   
             for(Personal man : ar)
             {
             System.out.println(man.getAge()+""+man.getName()+"");
      
             }
      
      
    }

    @Override
    public int compareTo(Personal o) {
        return this.age-o.age;
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

   
    
    
    }
package personal;
import java.util.Comparator;
public class personalcompare implements Comparator<Personal> {

    @Override
    public int compare(Personal o1, Personal o2) {
        return o1.getName().compareTo(o2.getName());
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

  

  
    
}


  




    
    
       
    
    


